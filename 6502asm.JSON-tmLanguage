// [PackageDev] target_format: plist, ext: tmLanguage
{ "name": "CA65 6502 Assembler",
  "scopeName": "source.asm6502",
  "fileTypes": ["s", "asm", "a65"],
  "uuid": "c43df48f-a6ca-46cb-989d-ccb487838d57",
  "patterns": [
	  {
	  	"match": "^\\s*(\\S+):",
	  	"name": "comment.function.ca65",
	  	"captures": {
	  		"1": { "name": "markup.inserted" }
	  	}
	  },
	  {
	  	"name": "keyword.control.command",
	  	"match": "^\\s*\\.(?i:a16|a8|addr|align|asciiz|assert|autoimport|bss|byte|byt|case|charmap|code|condes|constructor|data|dbyt|debuginfo|defined|define|def|destructor|dword|elseif|else|endenum|endif|endmac|endmacro|endproc|endrep|endrepeat|endscope|endstruct|end|enum|error|exitmacro|exitmac|exportzp|export|faraddr|feature|fileopt|fopt|forceimport|globalzp|global|i16|i8|ifblank|ifconst|ifdef|ifnblank|ifndef|ifnref|ifp02|ifp816|ifpc02|ifpsc02|ifref|if|importzp|import|incbin|include|interruptor|linecont|listbytes|list|localchar|local|macpack|macro|mac|org|out|p02|p816|pagelength|pagelen|pc02|popseg|proc|psc02|pushseg|reloc|repeat|res|rodata|scope|segment|setcpu|smart|struct|sunplus|tag|warning|word|zeropage|bankbyte|blank|concat|const|hibyte|hiword|ident|left|lobyte|loword|match|mid|ref|referenced|right|sizeof|strat|sprintf|string|strlen|tcount|xmatch|)\\b"
	  },
	  {
	  	"begin": "\"",
	  	"end": "\"",
	  	"name": "string.quoted.escaped"
	  },
	  {
	  	"begin": "'",
	  	"end": "'",
	  	"name": "string.quoted.single"
	  },
  	{
  		"name": "comment.semi-colon",
  		"match": ";.*$"
  	},
  	{
  		"name": "storage.immediate",
  		"match": "(?!\\s)\\#(?!(^\\s))"
  	},
  	{
	  	"name": "constant.numeric.hex",
	  	"match": "(\\$)[A-Fa-f0-9]+\\b"
	  },
  	{
	  	"name": "constant.numeric.binary",
	  	"match": "\\%[01]+\\b"
	  },
	  {
	  	"name": "constant.numeric.decimal",
	  	"match": "\\b[0-9]+\\b"
	  },
	  {
	  	"name": "markup.inserted",
	  	"match": "\\b(?i:bpl|bmi|bvc|bvs|bcc|bcs|bne|beq|jmp|jsr|ret|rti)\\b"
	  },
	  {
	  	"name": "support.function.mnemonic.ca65",
	  	"match": "\\b(?i:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b"
	  },
	  {
	  	"name": "variable",
	  	"match": "\\b[^\\.][a-zA-Z_][a-zA-Z_0-9]*\\b"
	  },
	  {
	  	"name": "operator",
	  	"match": "[\\+\\-\\*\\/]"
	  }
  ]
}
